server.port=9001

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/testdb
spring.datasource.username=root
spring.datasource.password=Arjun@786
#logging.level.root=WARN
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
spring.jpa.hibernate.use-new-id-generator-mappings=true

spring.kafka.consumer.bootstrap-servers = localhost:9092
spring.kafka.consumer.group-id= group_id
spring.kafka.consumer.auto-offset-reset = earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.bootstrap-servers = localhost:9092
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer


spring.cloud.stream.default.producer.useNativeEncoding= true
spring.cloud.stream.default.consumer.useNativeEncoding= true
spring.cloud.stream.default.bindings.input.destination= selected-products
spring.cloud.stream.default.bindings.input.content-type= application/*+avro
spring.cloud.stream.default.bindings.output.destination= selected-products
spring.cloud.stream.default.bindings.output.content-type= application/*+avro

spring.kafka.properties.schema.registry.url= http://localhost:8081
spring.kafka.properties.specific.avro.reader= true
